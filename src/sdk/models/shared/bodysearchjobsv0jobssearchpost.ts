/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class BodySearchJobsV0JobsSearchPost extends SpeakeasyBase {
  /**
   * Company names. Will return companies that match these names exactly, case-sensitively.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companies" })
  companies?: string[];

  /**
   * Company domains, full URLs or emails
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companies_urls" })
  companiesUrls?: string[];

  /**
   * Get jobs with these IDs only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_ids" })
  jobIds?: number[];

  /**
   * Regex patterns to match job titles. Case-insensitive. Only jobs with title that match all of these patterns will be returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title_patterns" })
  jobTitlePatterns?: string[];

  /**
   * Regex patterns to match job titles. Case-insensitive. Jobs whose job title doesn't match any of the patterns will be returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title_patterns_not" })
  jobTitlePatternsNot?: string[];

  /**
   * Regex patterns to match job titles. Case-insensitive. Jobs whose job title matches of the filters will be returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title_patterns_or" })
  jobTitlePatternsOr?: string[];
}
