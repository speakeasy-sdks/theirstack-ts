/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Successful Response
 */
export class UserWithCreditsInfo extends SpeakeasyBase {
  /**
   * Length of a billing cycle, in months. Credits will only be consumed once per company within a billing cycle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billing_cycle_length_months" })
  billingCycleLengthMonths?: number;

  /**
   * Number of credits left in the current billing cycle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credits_left_current_billing_cycle" })
  creditsLeftCurrentBillingCycle?: number;

  /**
   * Number of credits per billing cycle. Some endpoints are metered. Currently, 1 call to one of those endpoints = 1 credit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credits_per_billing_cycle" })
  creditsPerBillingCycle?: number;

  /**
   * Number of credits used in the current billing cycle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credits_used_current_billing_cycle" })
  creditsUsedCurrentBillingCycle?: number;

  /**
   * End of the current billign cycle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_billing_cycle_end" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  currentBillingCycleEnd?: Date;

  /**
   * Start of the current billing cycle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_billing_cycle_start" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  currentBillingCycleStart?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_superuser" })
  isSuperuser?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Maximum value of the `limit` query parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_limit" })
  maxLimit?: number;

  /**
   * Maximum value of the `page` query parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_page" })
  maxPage?: number;

  /**
   * The plan the user is subscribed to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  plan?: string;

  /**
   * A JWT token that doesn't expire required to authenticate. Can be passed to authenticate via a `token` query parameter, a `token` cookie or a Bearer header
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;
}
