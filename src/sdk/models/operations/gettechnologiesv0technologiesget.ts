/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetTechnologiesV0TechnologiesGetRequest extends SpeakeasyBase {
  /**
   * Regex patter of a technology category, case-insensitive. For example, `data|storage|queue` to find data tools.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=category_pattern",
  })
  categoryPattern?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Regex pattern of a technology name, case-insensitive
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=name_pattern",
  })
  namePattern?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;
}

export class GetTechnologiesV0TechnologiesGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata({ elemType: shared.TechnologyAggregated })
  technologyAggregateds?: shared.TechnologyAggregated[];
}
