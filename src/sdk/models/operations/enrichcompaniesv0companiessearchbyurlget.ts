/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Format of the response. One of `json` or `csv`. Defaults to `json`.
 */
export enum EnrichCompaniesV0CompaniesSearchByUrlGetFormatFormatEnum {
  Json = "json",
  Csv = "csv",
}

export class EnrichCompaniesV0CompaniesSearchByUrlGetRequest extends SpeakeasyBase {
  /**
   * Array or comma-separated string containing domains, emails or full URLs.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=companies_urls",
  })
  companiesUrls?: string[];

  /**
   * Comma-sep rated list of domains. Deprecated - use the `companies_urls` parameter instead. You can pass domains, emails or full URLs to it directly.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=domains",
  })
  domains?: string;

  /**
   * Comma-sep rated list of emails. Deprecated - use the `companies_urls` parameter instead. You can pass domains, emails or full URLs to it directly.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=emails",
  })
  emails?: string;

  /**
   * Format of the response. One of `json` or `csv`. Defaults to `json`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format?: EnrichCompaniesV0CompaniesSearchByUrlGetFormatFormatEnum;
}

export class EnrichCompaniesV0CompaniesSearchByUrlGetResponse extends SpeakeasyBase {
  /**
   * Successful Response
   */
  @SpeakeasyMetadata({ elemType: shared.CompanyWithTechnologies })
  companyWithTechnologies?: shared.CompanyWithTechnologies[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
